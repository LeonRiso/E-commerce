// Definindo o provedor de banco de dados e a URL de conexão
datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL") // Certifique-se de que o arquivo .env contém a URL correta do banco de dados
}

// Geração do cliente Prisma
generator client {
  provider = "prisma-client-js"
}

// Modelo de usuários
model User {
  id        Int      @id @default(autoincrement())
  name      String
  email     String   @unique
  password  String
  role      Role     @default(CUSTOMER)
  createdAt DateTime @default(now())
  orders    Order[] // Relacionamento com pedidos
}

enum Role {
  CUSTOMER
  ADMIN
}

// Modelo de produtos
model Product {
  id          Int         @id @default(autoincrement())
  name        String
  description String?
  price       Decimal     @db.Decimal(10, 2)
  stock       Int         @default(0)
  createdAt   DateTime    @default(now())
  orderItems  OrderItem[]
}

// Modelo de pedidos
model Order {
  id        Int         @id @default(autoincrement())
  user      User        @relation(fields: [userId], references: [id])
  userId    Int
  total     Decimal     @db.Decimal(10, 2)
  status    OrderStatus @default(PENDING)
  createdAt DateTime    @default(now())
  items     OrderItem[]
  payments  Payment[]
}

enum OrderStatus {
  PENDING
  COMPLETED
  CANCELLED
}

// Modelo de itens do pedido
model OrderItem {
  id        Int     @id @default(autoincrement())
  order     Order   @relation(fields: [orderId], references: [id])
  orderId   Int
  product   Product @relation(fields: [productId], references: [id])
  productId Int
  quantity  Int
  price     Decimal @db.Decimal(10, 2)
}

// Modelo de pagamentos
model Payment {
  id            Int           @id @default(autoincrement())
  order         Order         @relation(fields: [orderId], references: [id])
  orderId       Int
  amount        Decimal       @db.Decimal(10, 2)
  paymentMethod PaymentMethod
  status        PaymentStatus @default(PENDING)
  paymentDate   DateTime      @default(now())
}

enum PaymentMethod {
  CREDIT_CARD
  PAYPAL
  BANK_TRANSFER
}

enum PaymentStatus {
  PENDING
  COMPLETED
  FAILED
}
